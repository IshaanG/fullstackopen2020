{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","text","handleOnChange","value","onChange","PersonForm","props","onSubmit","handleOnSubmit","handleNewName","handleHandleNameChange","handleNewNumber","handleHandleNumberChange","type","Persons","personsToShow","handleClick","map","person","key","name","number","onClick","id","baseUrl","axios","get","then","response","data","newObject","post","put","delete","Notification","errorMessage","successMessage","className","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","setErrorMessage","setSuccessMessage","filter","toLowerCase","includes","useEffect","personService","notes","catch","setTimeout","event","target","p","preventDefault","length","window","confirm","personObject","find","changedPersonObject","returnedPersonObject","newPersons","returnedPerson","concat","personName","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.41806008.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Filter = ({ text, handleOnChange }) => {\n  return (\n    <div>\n      filter shown with <input value={text} onChange={handleOnChange} />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\n\nconst PersonForm = (props) => {\n  return (\n    <form onSubmit={props.handleOnSubmit}>\n      <div>\n        name:{\" \"}\n        <input\n          value={props.handleNewName}\n          onChange={props.handleHandleNameChange}\n        />\n      </div>\n      <div>\n        number:{\" \"}\n        <input\n          value={props.handleNewNumber}\n          onChange={props.handleHandleNumberChange}\n        />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default PersonForm;\n","import React from \"react\";\n\nconst Persons = ({ personsToShow, handleClick }) => {\n  return (\n    <ul>\n      {personsToShow.map((person) => {\n        return (\n          <li key={person.name}>\n            {person.name} {person.number}{\" \"}\n            <button\n              onClick={() => {\n                handleClick(person.id);\n              }}\n            >\n              delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\nexport default Persons;\n","import axios from \"axios\";\nconst baseUrl = \"/api/persons\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then((response) => response.data);\n};\n\nconst deletePerson = (id) => {\n  return axios.delete(`${baseUrl}/${id}`);\n};\n\nexport default { getAll, create, update, deletePerson };\n","import React from \"react\";\nconst Notification = ({ errorMessage, successMessage }) => {\n  if (errorMessage === \"\" && successMessage === \"\") {\n    return null;\n  } else if (errorMessage === \"\") {\n    return <div className=\"success\">{successMessage}</div>;\n  } else {\n    return <div className=\"error\">{errorMessage}</div>;\n  }\n};\n\nexport default Notification;\n","import React, { useState, useEffect } from \"react\";\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport Persons from \"./components/Persons\";\nimport personService from \"./services/persons\";\nimport Notification from \"./components/Notification\";\nimport \"./index.css\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [newFilter, setNewFilter] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n\n  const alreadyExist = (p) => {\n    return persons.filter((person) => person.name === p).length > 0;\n  };\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value);\n  };\n\n  const handleDeletePerson = (id) => {\n    const personName = persons.filter((person) => person.id === id)[0].name;\n    if (window.confirm(`Delete ${personName}?`)) {\n      personService\n        .deletePerson(id)\n        .then(() => {\n          setPersons(persons.filter((person) => person.id !== id));\n          setSuccessMessage(`Successfully deleted ${personName}`);\n          setTimeout(() => {\n            setSuccessMessage(\"\");\n          }, 5000);\n        })\n        .catch(() => {\n          setErrorMessage(\n            `Information of ${personName} has already been removed from server.`\n          );\n          setTimeout(() => {\n            setErrorMessage(\"\");\n          }, 5000);\n        });\n    }\n  };\n\n  const personsToShow =\n    newFilter === \"\"\n      ? persons\n      : persons.filter((person) =>\n          person.name.toLowerCase().includes(newFilter.toLowerCase())\n        );\n\n  const addPerson = (event) => {\n    event.preventDefault();\n    if (alreadyExist(newName)) {\n      //alert(`${newName} is already added to phonebook`);\n      if (\n        window.confirm(\n          `${newName} is already added to phonebook, replace the old number with new a one?`\n        )\n      ) {\n        const personObject = persons.find((person) => person.name === newName);\n        const changedPersonObject = { ...personObject, number: newNumber };\n        personService\n          .update(changedPersonObject.id, changedPersonObject)\n          .then((returnedPersonObject) => {\n            const newPersons = persons.map((person) =>\n              person.name !== newName ? person : returnedPersonObject\n            );\n            setPersons(newPersons);\n            setSuccessMessage(`Successfully updated number for ${newName}`);\n            setTimeout(() => {\n              setSuccessMessage(\"\");\n            }, 5000);\n          })\n          .catch(() => {\n            setErrorMessage(`Could not add a new person.`);\n            setTimeout(() => {\n              setErrorMessage(\"\");\n            }, 5000);\n          });\n      }\n    } else {\n      const personObject = {\n        name: newName,\n        number: newNumber,\n      };\n      personService\n        .create(personObject)\n        .then((returnedPerson) => {\n          setPersons(persons.concat(returnedPerson));\n          setSuccessMessage(`Added ${newName}`);\n          setTimeout(() => {\n            setSuccessMessage(\"\");\n          }, 5000);\n          setNewName(\"\"); // clears form name input\n          setNewNumber(\"\"); //clears form number input\n        })\n        .catch(() => {\n          setErrorMessage(`Could not add a new person.`);\n          setTimeout(() => {\n            setErrorMessage(\"\");\n          }, 5000);\n        });\n    }\n  };\n  useEffect(() => {\n    personService\n      .getAll()\n      .then((notes) => {\n        setPersons(notes);\n      })\n      .catch(() => {\n        setErrorMessage(`Could not fetch persons data`);\n        setTimeout(() => {\n          setErrorMessage(\"\");\n        }, 5000);\n      });\n  }, []);\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification\n        errorMessage={errorMessage}\n        successMessage={successMessage}\n      />\n      <Filter text={newFilter} handleOnChange={handleFilterChange} />\n      <h2>add a new</h2>\n      <PersonForm\n        handleOnSubmit={addPerson}\n        handleHandleNameChange={handleNameChange}\n        handleHandleNumberChange={handleNumberChange}\n        handleNewName={newName}\n        handleNewNumber={newNumber}\n      />\n      <h2>Numbers</h2>\n      <Persons personsToShow={personsToShow} handleClick={handleDeletePerson} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}